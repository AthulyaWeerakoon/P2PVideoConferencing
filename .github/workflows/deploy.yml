name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Dockerhub
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/p2p-backend:latest -f Dockerfile .

      - name: Push to Dockerhub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/p2p-backend:latest

  deploy-backend:
    runs-on: [self-hosted, google]
    needs: build-and-push-backend
    steps:
      - name: Pull the Docker image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/p2p-backend:latest

      - name: Create certs directory
        run: mkdir -p certs

      - name: Decode and save certificate to runner folder
        env:
          PFX_CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_PFX_BASE64 }}
          PFX_CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        run: |
          # Decode and save certificate
          echo "$PFX_CERTIFICATE_BASE64" | base64 --decode > certs/certificate.pfx
          # Save certificate password
          echo "$PFX_CERTIFICATE_PASSWORD" > certs/certificate_password.txt

      - name: Stop and remove old container
        run: docker rm -f p2p-backend-container || true

      - name: Run Docker container with certificates mounted
        run: |
          docker run -d --restart always \
          -p 2087:2087 \
          -v $(pwd)/certs:/certs \
          --name p2p-backend-container ${{ secrets.DOCKERHUB_USERNAME }}/p2p-backend:latest

      - name: Prune old Docker images
        run: docker image prune -f
